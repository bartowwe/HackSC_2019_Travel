{"ast":null,"code":"import _classCallCheck from \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/src/components/home.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { places, GeoCoder, Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Redirect, Switch, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nvar google = window.google;\nvar $ = window.$;\nvar geocoder = new google.maps.Geocoder();\nvar directionsService = new google.maps.DirectionsService();\nvar directionsDisplay = new google.maps.DirectionsRenderer();\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      startLat: \"\",\n      startLong: \"\",\n      destLat: \"\",\n      destLong: \"\",\n      dest: '',\n      initial: ''\n    };\n    _this.initializeMap = _this.initializeMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.calculateAndDisplayRoute = _this.calculateAndDisplayRoute.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializeMap();\n    }\n  }, {\n    key: \"initializeMap\",\n    value: function initializeMap() {\n      function autocompleteStartLocation() {\n        var destination = document.getElementById('destField');\n        this.setState({\n          dest: destination\n        });\n        var autocomplete = new google.maps.places.Autocomplete(this.state.dest);\n      }\n\n      function autocompleteDestination() {\n        var initial = document.getElementById('initField');\n        this.setState({\n          initial: initial\n        });\n        var autocomplete = new google.maps.places.Autocomplete(this.state.initial);\n      }\n\n      google.maps.event.addDomListener(window, 'load', autocompleteStartLocation);\n      google.maps.event.addDomListener(window, 'load', autocompleteDestination); //for directions\n\n      directionsDisplay.setMap(document.getElementById('map'));\n    }\n  }, {\n    key: \"calculateAndDisplayRoute\",\n    value: function calculateAndDisplayRoute(directionsService, directionsDisplay) {\n      //geocode\n      // Geocode the address\n      geocoder.geocode({\n        'address': this.state.dest.value\n      }, function (results, status) {\n        if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\n          //define results\n          var destLat = results[0].geometry.location.lat();\n          var destLong = results[0].geometry.location.lng(); //recurse with init\n\n          geocoder.geocode({\n            'address': initial.value\n          }, function (results, status) {\n            if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\n              //define results\n              var startLat = results[0].geometry.location.lat();\n              var startLong = results[0].geometry.location.lng(); //here is where we could use the lat/long to get a route\n\n              directionsService.route({\n                origin: {\n                  lat: startLat,\n                  lng: startLong\n                },\n                destination: {\n                  lat: destLat,\n                  lng: destLong\n                },\n                travelMode: 'DRIVING'\n              }, function (response, status) {\n                if (status === 'OK') {\n                  directionsDisplay.setDirections(response);\n                } else {\n                  window.alert('Directions request failed due to ' + status);\n                }\n              }); // show an error if it's not\n            } else {\n              alert(\"Error with destination field! Please try again and make sure the address is valid!\");\n              console.log(status);\n              console.log(results);\n            }\n          }); // show an error if it's not\n        } else {\n          alert(\"Error with destination field! Please try again and make sure the address is valid!\");\n          console.log(status);\n          console.log(results);\n        }\n      }); //end geocode\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"searchpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"initField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Initial Location\"), React.createElement(\"input\", {\n        className: \"searchBar\",\n        id: \"initField\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"destField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Destination\"), React.createElement(\"input\", {\n        className: \"searchBar\",\n        id: \"destField\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        id: \"search\",\n        onClick: function onClick() {\n          _this2.calculateAndDisplayRoute(directionsService, directionsDisplay);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Check Route!\"), React.createElement(\"span\", {\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"double-bounce1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"double-bounce2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        className: \"map\",\n        google: google,\n        style: {\n          height: '100%',\n          position: 'relative',\n          width: '100%'\n        },\n        zoom: 14,\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/src/components/home.jsx"],"names":["React","axios","places","GeoCoder","Map","InfoWindow","Marker","GoogleApiWrapper","Redirect","Switch","Link","Route","BrowserRouter","Router","google","window","$","geocoder","maps","Geocoder","directionsService","DirectionsService","directionsDisplay","DirectionsRenderer","App","props","state","startLat","startLong","destLat","destLong","dest","initial","initializeMap","bind","calculateAndDisplayRoute","autocompleteStartLocation","destination","document","getElementById","setState","autocomplete","Autocomplete","autocompleteDestination","event","addDomListener","setMap","geocode","value","results","status","GeocoderStatus","OK","length","geometry","location","lat","lng","route","origin","travelMode","response","setDirections","alert","console","log","height","position","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { places, GeoCoder, Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport {\n  Redirect,\n  Switch,\n  Link,\n  Route,\n  BrowserRouter as Router\n} from 'react-router-dom';\n\n\n\nconst google = window.google;\nconst $ = window.$;\nlet geocoder = new google.maps.Geocoder();\nvar directionsService = new google.maps.DirectionsService;\nvar directionsDisplay = new google.maps.DirectionsRenderer;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      startLat: \"\",\n      startLong: \"\",\n      destLat: \"\",\n      destLong: \"\",\n      dest: '',\n      initial: '',\n    };\n    this.initializeMap = this.initializeMap.bind(this);\n    this.calculateAndDisplayRoute = this.calculateAndDisplayRoute.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  initializeMap() {\n    function autocompleteStartLocation() {\n      var destination = document.getElementById('destField');\n      this.setState({dest: destination});\n      var autocomplete = new google.maps.places.Autocomplete(this.state.dest);\n    }\n\n    function autocompleteDestination() {\n      var initial = document.getElementById('initField');\n      this.setState({initial: initial});\n      var autocomplete = new google.maps.places.Autocomplete(this.state.initial);\n    }\n\n    google.maps.event.addDomListener(window, 'load', autocompleteStartLocation);\n    google.maps.event.addDomListener(window, 'load', autocompleteDestination);\n\n    //for directions\n    directionsDisplay.setMap(document.getElementById('map'));\n  }\n\n  calculateAndDisplayRoute(directionsService, directionsDisplay) {\n    //geocode\n        // Geocode the address\n        geocoder.geocode({\n          'address': this.state.dest.value\n        }, function (results, status) {\n          if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\n            //define results\n            let destLat = results[0].geometry.location.lat();\n            let destLong = results[0].geometry.location.lng();\n            //recurse with init\n            geocoder.geocode({\n              'address': initial.value\n            }, function (results, status) {\n              if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\n                //define results\n                let startLat = results[0].geometry.location.lat();\n                let startLong = results[0].geometry.location.lng();\n\n                \n\n                //here is where we could use the lat/long to get a route\n                directionsService.route({\n                  origin: {lat: startLat, lng: startLong},\n                  destination: {lat: destLat, lng: destLong},\n                  travelMode: 'DRIVING'\n                }, function(response, status) {\n                  if (status === 'OK') {\n                    directionsDisplay.setDirections(response);\n                  } else {\n                    window.alert('Directions request failed due to ' + status);\n                  }\n                });\n\n\n                // show an error if it's not\n              } else {\n                alert(\"Error with destination field! Please try again and make sure the address is valid!\");\n                console.log(status);\n                console.log(results);\n              }\n            });\n            // show an error if it's not\n          } else {\n            alert(\"Error with destination field! Please try again and make sure the address is valid!\");\n            console.log(status);\n            console.log(results);\n          }\n        });\n    //end geocode\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"searchpage\">\n          <label htmlFor=\"initField\">Initial Location</label>\n          <input className=\"searchBar\" id=\"initField\" type=\"text\" />\n          <label htmlFor=\"destField\">Destination</label>\n          <input className=\"searchBar\" id=\"destField\" type=\"text\" />\n          <button className=\"btn btn-default\" id=\"search\" onClick={() => {this.calculateAndDisplayRoute(directionsService,directionsDisplay)}}>Check Route!</button>\n          <span className=\"spinner\">\n            <span className=\"double-bounce1\"></span>\n            <span className=\"double-bounce2\"></span>\n          </span>\n        </div>\n        \n        <Map\n          centerAroundCurrentLocation\n          className=\"map\"\n          google={google}\n          style={{ height: '100%', position: 'relative', width: '100%' }}\n          zoom={14}\n          id=\"map\"\n        />\n      </div>\n\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
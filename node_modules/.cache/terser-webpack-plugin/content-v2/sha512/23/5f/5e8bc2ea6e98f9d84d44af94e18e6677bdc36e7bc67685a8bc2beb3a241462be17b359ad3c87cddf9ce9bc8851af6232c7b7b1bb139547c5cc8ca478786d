{"map":"{\"version\":3,\"sources\":[\"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/src/components/home.jsx\",\"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/src/App.js\",\"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/src/serviceWorker.js\",\"/Users/bartowweiss/Documents/GitHub/HackSC_2019_Travel_BRANCH/src/index.js\"],\"names\":[\"google\",\"window\",\"$\",\"geocoder\",\"maps\",\"Geocoder\",\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"startLat\",\"startLong\",\"destLat\",\"destLong\",\"comparePrices\",\"bind\",\"assertThisInitialized\",\"initializeMap\",\"checkPrice\",\"event\",\"addDomListener\",\"dest\",\"document\",\"getElementById\",\"places\",\"Autocomplete\",\"initial\",\"css\",\"geocode\",\"address\",\"value\",\"results\",\"status\",\"GeocoderStatus\",\"OK\",\"length\",\"geometry\",\"location\",\"lat\",\"lng\",\"alert\",\"console\",\"log\",\"axios\",\"post\",\"startLatitude\",\"startLongitude\",\"endLatitude\",\"endLongitude\",\"then\",\"res\",\"catch\",\"err\",\"error\",\"react_default\",\"a\",\"createElement\",\"className\",\"htmlFor\",\"id\",\"type\",\"onClick\",\"dist\",\"centerAroundCurrentLocation\",\"style\",\"height\",\"position\",\"width\",\"zoom\",\"React\",\"Component\",\"Switch\",\"Route\",\"path\",\"component\",\"Home\",\"Redirect\",\"from\",\"exact\",\"to\",\"Boolean\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"BrowserRouter\",\"src_App_0\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport axios from 'axios';\\nimport { places, GeoCoder, Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\\nimport {\\n  Redirect,\\n  Switch,\\n  Link,\\n  Route,\\n  BrowserRouter as Router\\n} from 'react-router-dom';\\n\\n\\n\\nconst google = window.google;\\nconst $ = window.$;\\nlet geocoder = new google.maps.Geocoder();\\n\\nclass App extends React.Component {\\n\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      startLat: \\\"\\\",\\n      startLong: \\\"\\\",\\n      destLat: \\\"\\\",\\n      destLong: \\\"\\\",\\n    };\\n    this.comparePrices = this.comparePrices.bind(this);\\n    this.initializeMap = this.initializeMap.bind(this);\\n    this.checkPrice = this.checkPrice.bind(this);\\n  }\\n\\n  componentDidMount() {\\n    this.initializeMap();\\n  }\\n\\n  initializeMap() {\\n    function autocompleteStartLocation() {\\n      var dest = document.getElementById('destField');\\n      var autocomplete = new google.maps.places.Autocomplete(dest);\\n    }\\n\\n    function autocompleteDestination() {\\n      var initial = document.getElementById('initField');\\n      var autocomplete = new google.maps.places.Autocomplete(initial);\\n    }\\n\\n    google.maps.event.addDomListener(window, 'load', autocompleteStartLocation);\\n    google.maps.event.addDomListener(window, 'load', autocompleteDestination);\\n  }\\n\\n  checkPrice() {\\n    $('.spinner').css('display', 'inline-block');\\n\\n    var dest = document.getElementById('destField');\\n    var initial = document.getElementById('initField');\\n\\n\\n\\n    // Get geocoder instance\\n\\n    let comparePrices = this.comparePrices.bind(this);\\n    // Geocode the address\\n    geocoder.geocode({\\n      'address': dest.value\\n    }, function (results, status) {\\n      if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\\n        //define results\\n        let destLat = results[0].geometry.location.lat();\\n        let destLong = results[0].geometry.location.lng();\\n        //recurse with init\\n        geocoder.geocode({\\n          'address': initial.value\\n        }, function (results, status) {\\n          if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\\n            //define results\\n            let startLat = results[0].geometry.location.lat();\\n            let startLong = results[0].geometry.location.lng();\\n            comparePrices(startLat, startLong, destLat, destLong);\\n            // show an error if it's not\\n          } else {\\n            alert(\\\"Error with destination field! Please try again and make sure the address is valid!\\\");\\n            console.log(status);\\n            console.log(results);\\n          }\\n        });\\n        // show an error if it's not\\n      } else {\\n        alert(\\\"Error with destination field! Please try again and make sure the address is valid!\\\");\\n        console.log(status);\\n        console.log(results);\\n      }\\n    });\\n\\n  }\\n\\n  comparePrices(startLat, startLong, destLat, destLong) {\\n    console.log('hello')\\n    axios.post('/search', {\\n      startLatitude: startLat,\\n      startLongitude: startLong,\\n      endLatitude: destLat,\\n      endLongitude: destLong\\n    })\\n      .then(res => {\\n\\n      })\\n      .catch(err => { console.error(err) });\\n  }\\n\\n\\n\\n\\n  render() {\\n    return (\\n      <div>\\n        <div className=\\\"searchpage\\\">\\n          <label htmlFor=\\\"initField\\\">Initial Location</label>\\n          <input className=\\\"searchBar\\\" id=\\\"initField\\\" type=\\\"text\\\" />\\n          <label htmlFor=\\\"destField\\\">Destination</label>\\n          <input className=\\\"searchBar\\\" id=\\\"destField\\\" type=\\\"text\\\" />\\n          <button className=\\\"btn btn-default\\\" id=\\\"search\\\" onClick={this.checkPrice}>Check Route!</button>\\n          <span className=\\\"spinner\\\">\\n            <span className=\\\"double-bounce1\\\"></span>\\n            <span className=\\\"double-bounce2\\\"></span>\\n          </span>\\n        </div>\\n        \\n        <Map\\n          centerAroundCurrentLocation\\n          className=\\\"map\\\"\\n          google={google}\\n          style={{ height: '100%', position: 'relative', width: '100%' }}\\n          zoom={14}\\n        />\\n      </div>\\n\\n    )\\n  }\\n}\\n\\nexport default App;\",\"import React, { Component } from \\\"react\\\";\\nimport { Route, Redirect, Switch } from \\\"react-router-dom\\\";\\nimport Home from \\\"./components/home\\\";\\nimport \\\"./App.css\\\";\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <Switch>\\n        <Route path=\\\"/home\\\" component={Home} />\\n        <Redirect from=\\\"/\\\" exact to=\\\"/home\\\" />\\n        <Redirect to=\\\"/not-found\\\" />\\n      </Switch>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport { BrowserRouter } from \\\"react-router-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\nimport \\\"bootstrap/dist/css/bootstrap.min.css\\\";\\nimport \\\"font-awesome/css/font-awesome.css\\\";\\n\\nReactDOM.render(\\n  <BrowserRouter>\\n    <App />\\n  </BrowserRouter>,\\n  document.getElementById(\\\"root\\\")\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{29:function(e,t,a){e.exports=a(76)},34:function(e,t,a){},69:function(e,t,a){},76:function(e,t,a){\"use strict\";a.r(t);var n=a(1),o=a.n(n),i=a(9),c=a.n(i),l=a(78),r=(a(34),a(10)),s=a(11),d=a(15),m=a(12),u=a(16),p=a(79),h=a(80),g=a(77),b=a(6),f=a(27),v=a.n(f),w=a(28),E=window.google,y=window.$,k=new E.maps.Geocoder,O=function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(d.a)(this,Object(m.a)(t).call(this,e))).state={startLat:\"\",startLong:\"\",destLat:\"\",destLong:\"\"},a.comparePrices=a.comparePrices.bind(Object(b.a)(Object(b.a)(a))),a.initializeMap=a.initializeMap.bind(Object(b.a)(Object(b.a)(a))),a.checkPrice=a.checkPrice.bind(Object(b.a)(Object(b.a)(a))),a}return Object(u.a)(t,e),Object(s.a)(t,[{key:\"componentDidMount\",value:function(){this.initializeMap()}},{key:\"initializeMap\",value:function(){E.maps.event.addDomListener(window,\"load\",function(){var e=document.getElementById(\"destField\");new E.maps.places.Autocomplete(e)}),E.maps.event.addDomListener(window,\"load\",function(){var e=document.getElementById(\"initField\");new E.maps.places.Autocomplete(e)})}},{key:\"checkPrice\",value:function(){y(\".spinner\").css(\"display\",\"inline-block\");var e=document.getElementById(\"destField\"),t=document.getElementById(\"initField\"),a=this.comparePrices.bind(this);k.geocode({address:e.value},function(e,n){if(n===E.maps.GeocoderStatus.OK&&e.length>0){var o=e[0].geometry.location.lat(),i=e[0].geometry.location.lng();k.geocode({address:t.value},function(e,t){if(t===E.maps.GeocoderStatus.OK&&e.length>0){var n=e[0].geometry.location.lat(),c=e[0].geometry.location.lng();a(n,c,o,i)}else alert(\"Error with destination field! Please try again and make sure the address is valid!\"),console.log(t),console.log(e)})}else alert(\"Error with destination field! Please try again and make sure the address is valid!\"),console.log(n),console.log(e)})}},{key:\"comparePrices\",value:function(e,t,a,n){console.log(\"hello\"),v.a.post(\"/search\",{startLatitude:e,startLongitude:t,endLatitude:a,endLongitude:n}).then(function(e){}).catch(function(e){console.error(e)})}},{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(\"div\",{className:\"searchpage\"},o.a.createElement(\"label\",{htmlFor:\"initField\"},\"Initial Location\"),o.a.createElement(\"input\",{className:\"searchBar\",id:\"initField\",type:\"text\"}),o.a.createElement(\"label\",{htmlFor:\"destField\"},\"Destination\"),o.a.createElement(\"input\",{className:\"searchBar\",id:\"destField\",type:\"text\"}),o.a.createElement(\"button\",{className:\"btn btn-default\",id:\"search\",onClick:this.checkPrice},\"Check Route!\"),o.a.createElement(\"span\",{className:\"spinner\"},o.a.createElement(\"span\",{className:\"double-bounce1\"}),o.a.createElement(\"span\",{className:\"double-bounce2\"}))),o.a.createElement(w.Map,{centerAroundCurrentLocation:!0,className:\"map\",google:E,style:{height:\"100%\",position:\"relative\",width:\"100%\"},zoom:14}))}}]),t}(o.a.Component),j=(a(69),function(e){function t(){return Object(r.a)(this,t),Object(d.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return o.a.createElement(p.a,null,o.a.createElement(h.a,{path:\"/home\",component:O}),o.a.createElement(g.a,{from:\"/\",exact:!0,to:\"/home\"}),o.a.createElement(g.a,{to:\"/not-found\"}))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(72),a(74);c.a.render(o.a.createElement(l.a,null,o.a.createElement(j,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[29,2,1]]]);","extractedComments":[]}